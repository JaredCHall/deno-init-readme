## [1.1.1] - 2025-05-06

- Fix README CLI example

## [1.1.0] - 2025-05-06

ðŸ§ª Full Test Coverage + Refactors for Testability

- Achieved **100% branch and line coverage** across the entire project
- Refactored `DocumentMaker` to remove internal state; all methods now accept arguments explicitly
- Moved config parsing and validation logic to `helper.ts`
- Extracted reusable utilities: `makeModuleSettings`, `makeBadges`, `fileExists`, `parseDenoConfig`
- Simplified testing:
  - Eliminated need for brittle `console.error` stubs
  - Replaced `assertThrows` with `assertRejects` for async error paths
  - Directly tested edge cases like missing config fields, fallback reads, and forced writes
- Identified plan to extract pure logic (`generateReadmeMarkdown`) into `core.ts` to isolate formatting logic

This release streamlines testability and sets the foundation for future modular enhancements.

## [1.0.0] - 2025-05-05

ðŸŽ‰ First stable release!

- Full CLI support with:
  - Interactive prompts
  - `--dry-run`, `--force`, and `--help` flags
- Reads project metadata from `deno.json(c)`
- Validates and extracts:
  - `name` (JSR scope/module)
  - `description`
  - `githubPath` for CI badge
- Smart fallback prompts for missing fields
- Generates consistent, badge-rich README scaffold
- 100% test coverage and type safety
- Can be used as a module (`DocumentMaker` class)

## [0.0.2] - 2025-05-05

- Improve CI/CD workflow
- JSDoc more symbols

## [0.0.1] - 2025-05-05

- Initial release of `deno-init-readme`, a tool for scaffolding `README.md` files for Deno modules.
- Interactive CLI for generating project overviews and usage instructions.
- Support for optional "Advanced Usage" section via prompt.
- Programmatic API via `DocumentMaker` class.
- Built-in JSR and GitHub Actions badges for README.
- Modular design with `DocumentSection`, `DocumentBadge`, and `DocumentMaker`.
- Test suite for all core components.
- GitHub Actions for CI (`lint`, `fmt`, `test`) and JSR publishing workflow.